<?xml version="1.0" encoding="UTF-8"?>
<!--
    Repository layers
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
 
    <!-- ========================= RESOURCE DEFINITIONS ========================= -->

    <!-- import the dataSource definition -->
    <import resource="datasource-config.xml"/>

    <context:component-scan
            base-package="org.icabanas.jee.api.integracion.dao.impl.jpa"/>

    <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    <!-- (in this case, JDBC-related settings for the JPA EntityManager definition below) --> 
    <context:property-placeholder location="classpath:META-INF/spring/data-access.properties" system-properties-mode="OVERRIDE"/>
		 
	
	<!-- ==================		 3 Profiles to choose from 			=================== 
									- default (uses JPA)
									- jdbc (uses Spring" JdbcTemplate)
									- spring-data-jpa	
		  =============================================================================-->
	
    <beans profile="default,spring-data-jpa">
        <!-- 
	        Este elemento utiliza el datasource para crear un EntityManagerFactory (quien crea EntityManagers) 
	        utilizando el datasource definido y el proveedor JPA.
	    -->
        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
              p:dataSource-ref="dataSource">
            <property name="jpaVendorAdapter" ref="vendorAdapter" />  
            <!-- gDickens: BOTH Persistence Unit and Packages to Scan are NOT compatible, persistenceUnit will win -->
            <property name="persistenceUnitName" value="test"/>
            <!-- 
            	En esta ocasión no genero un fichero persistence.xml, simplemente le indico a Spring dónde encontrar 
            	las entidades.
             -->
            <property name="packagesToScan" value="org.icabanas.jee.api.integracion.entidad"/>
        </bean>

        <!-- Transaction manager for a single JPA EntityManagerFactory (alternative to JTA)
        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
              p:entityManagerFactory-ref="entityManagerFactory"/>
		 -->

        <!--
            Post-processor to perform exception translation on @Repository classes (from native
            exceptions such as JPA PersistenceExceptions to Spring's DataAccessException hierarchy).        
        <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
        -->
        
        <!-- Este elemento declara el proveedor JPA, en este caso Hibernate -->
		<bean id="vendorAdapter"
				class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
			<property name="database" value="${jpa.database}" />
			<property name="showSql" value="${jpa.showSql}" />
			<property name="generateDdl" value="true" />
		</bean>

		<!-- DAO beans -->
		<bean id="personaDao" class="org.icabanas.jee.api.integracion.dao.jpa.PersonaDaoImpl" />
		
    </beans>

<!--     <beans profile="jdbc">
        Transaction manager for a single JDBC DataSource (alternative to JTA)
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
              p:dataSource-ref="dataSource"/>

        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>

        <bean id="namedParameterJdbcTemplate"
              class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>

        <context:component-scan base-package="org.springframework.samples.petclinic.repository.jdbc"/>
    </beans> -->

    <beans profile="default">
        <!--
            Loads JPA beans
            Will automatically be transactional due to @Transactional.
            EntityManager will be auto-injected due to @PersistenceContext.
            PersistenceExceptions will be auto-translated due to @Repository.
        -->
        <context:component-scan base-package="org.springframework.samples.petclinic.repository.jpa"/>
    </beans>

<!--     <beans profile="spring-data-jpa">
        <jpa:repositories base-package="org.springframework.samples.petclinic.repository.springdatajpa"/>
    </beans> -->
</beans>